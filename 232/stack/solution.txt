1. Очередная странная задача - нужно решить за O(1), но это амортизированное O(1)
2. Общая идея в том, чтобы складывать в один стек например [0]=1 [1]=2 [2]=3 [3]=4
3. Затем когда кто то обращается к 0 элементу, т.е. хочет получить 1, мы все это перекладываем во второй стек, т.е. получим [0]=4 [1]=3 [2]=2 [3]=1, т.е. из топа [3] можно забрать 1 элемент
4. Почему здесь O(1) хотя перекладываем мы N элементов - не понятно
